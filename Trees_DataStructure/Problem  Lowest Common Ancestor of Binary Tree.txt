Problem : Lowest Common Ancestor of a Binary Tree

Problem No Leetcode : 236 


Solution : CPP ////////////////////////////////////////////////////////////////// DFS TRAVERSAL \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\


struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        // if root is null , or root is equal to p or q just return that root nnot move ahead 
        if(!root || root == p || root == q){
            return root ;
        }

        TreeNode* leftC = lowestCommonAncestor(root->left,p,q);
        TreeNode* rightC = lowestCommonAncestor(root->right,p,q);

        if(leftC == NULL){
            return rightC ;
        }
        
        else if(rightC == NULL){
            return leftC ;
        }

        else{
            return root ;
        }



    }
};


