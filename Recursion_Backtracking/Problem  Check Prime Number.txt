Problem : Check Prime Number 

Problem Statement : 
Given a number n, determine whether it is a prime number or not. A prime number is a number greater than 1 that has no positive divisors other than 1 and itself.

Examples :

Input: n = 7
Output: true
Explanation: 7 has exactly two divisors: 1 and 7, making it a prime number.

Input: n = 25
Output: false
Explanation: 25 has more than two divisors: 1, 5, and 25, so it is not a prime number.

Input: n = 1
Output: false
Explanation: 1 has only one divisor (1 itself), which is not sufficient for it to be considered prime.

/****************************************************************** SOLUTION *********************************** CPP **********************************************/


class Solution {
  public:
    bool checkPrime(int n , int i){
        // base cases 
        
        if(n <= 2){
            return (n==2) ? true : false ;
        }
        if(n % i == 0) return false ;
        if(i * i > n)return true ; // if i * i got more than n that mean what is prime no
        
        return checkPrime(n,i+1);
         
      
    }
    bool isPrime(int n) {
        // code here
        // Recursive approach : O(N) time and O(N) space using for stack !
        
        return checkPrime(n,2);
        
        /*
        // simple approach : usiing loop : O(N) time 
        
        if(n <= 1) return false ;
        
        for(int i = 2 ; i < n ;i++){
            if(n % i == 0) return false ;
        }
        
        return true ;
        */
        
    }
};


/***************************************************************************************************************************************************************************/