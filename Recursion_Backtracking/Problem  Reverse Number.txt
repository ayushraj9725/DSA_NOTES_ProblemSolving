Problem : Reverse Number 

Given a number n. Find the sum of all the digits of n.

Examples:

Input: n = 12
Output: 3
Explanation: Sum of 12's digits: 1 + 2 = 3

Input: n = 23
Output 5
Explanation: Sum of 23's digits: 2 + 3 = 5

Constraints:
1<= n <=105

/******************************************************************************* SIMPLE APPROACH *******************************************************************/

class Solution {
  public:
       int sumOfDigits(int n) {
        
        // Simple Approach : using Loop : Time take : O(log10N) Space : O(1)
        int sum = 0 ;
        while(n > 0){
            int d = n % 10 ;
            sum = sum + d ;
            n = n / 10 ;
        }
        return sum ;
        
        
    }
};

/****************************************************************************** RECERCIVE APP **********************************************************************/
 class Solution {
  public:
       int Sum(int n, int sum){

        // base case 
        if(n == 0) return sum ;
        
        // Update recursive call   
        if(n > 0){
           int d = n % 10 ;
           sum = sum + d ;
           return Sum(n/10,sum) ;
        }
        
        // return sum ;
       }

       int sumOfDigits(int n) {
        // Recursive approach 
        int sum = 0 ;
        
        int ans = Sum(n,sum) ;
        return ans ;


         /*   
         
         we can directly call to this given function like 
         // base case 
         if(n == 0)   return 0 ;
          
         // Recursive Case
          return (n % 10) + sumOfDigits(n / 10); 
         
         */

       }
};
/******************************************************************************* STRING APPROACH ******************************************************************/